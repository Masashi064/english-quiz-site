{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/mkawa/myproject/english-quiz-site/app/word-review/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useAuth } from '@/context/AuthContext';\r\nimport { db } from '@/lib/firebase';\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDocs,\r\n  Timestamp,\r\n  updateDoc,\r\n} from 'firebase/firestore';\r\nimport { useRouter } from 'next/navigation';\r\n\r\ninterface ReviewWord {\r\n  id: string;\r\n  word: string;\r\n  meaning: string;\r\n  example: string;\r\n  easiness: number;\r\n  interval: number;\r\n  repetitions: number;\r\n  nextReviewDate: Timestamp;\r\n  lastReviewed?: Timestamp;\r\n}\r\n\r\nexport default function WordReviewPage() {\r\n  const { user, loading } = useAuth();\r\n  const router = useRouter();\r\n  const [reviewWords, setReviewWords] = useState<ReviewWord[]>([]);\r\n  const [fetching, setFetching] = useState(true);\r\n  const [lastReviewedWord, setLastReviewedWord] = useState<string | null>(null);\r\n  const [lastReviewedMessage, setLastReviewedMessage] = useState<string | null>(null);\r\n\r\n\r\n  useEffect(() => {\r\n    if (!loading && !user) router.push('/login');\r\n  }, [user, loading, router]);\r\n\r\n  useEffect(() => {\r\n    const fetchReviewWords = async () => {\r\n      if (!user) return;\r\n\r\n      const favRef = collection(db, 'users', user.uid, 'favoriteWords');\r\n      const favSnap = await getDocs(favRef);\r\n\r\n      const today = new Date();\r\n      const dueWords: ReviewWord[] = [];\r\n\r\n      favSnap.forEach((doc) => {\r\n        const d = doc.data();\r\n        const word: ReviewWord = {\r\n          id: doc.id,\r\n          word: d.word,\r\n          meaning: d.definition,\r\n          example: d.example,\r\n          easiness: d.easiness ?? 2.5,\r\n          interval: d.interval ?? 1,\r\n          repetitions: d.repetitions ?? 0,\r\n          nextReviewDate: d.nextReviewDate ?? Timestamp.fromDate(today),\r\n          lastReviewed: d.lastReviewed ?? null,\r\n        };\r\n\r\n        if (word.nextReviewDate.toDate() <= today) {\r\n          dueWords.push(word);\r\n        }\r\n      });\r\n\r\n      setReviewWords(dueWords);\r\n      setFetching(false);\r\n    };\r\n\r\n    fetchReviewWords();\r\n  }, [user]);\r\n\r\n  const applySM2 = (\r\n    score: number,\r\n    easiness: number,\r\n    repetitions: number,\r\n    interval: number\r\n  ) => {\r\n    if (score < 3) return { easiness, repetitions: 0, interval: 1 };\r\n\r\n    repetitions += 1;\r\n    interval = repetitions === 1 ? 1 : repetitions === 2 ? 6 : Math.round(interval * easiness);\r\n    easiness = Math.max(1.3, easiness + (0.1 - (5 - score) * (0.08 + (5 - score) * 0.02)));\r\n    return { easiness, repetitions, interval };\r\n  };\r\n\r\n  const handleReview = async (score: number, word: ReviewWord) => {\r\n    if (!user) return;\r\n    const ref = doc(db, 'users', user.uid, 'favoriteWords', word.id);\r\n    const { easiness, repetitions, interval } = applySM2(\r\n      score,\r\n      word.easiness,\r\n      word.repetitions,\r\n      word.interval\r\n    );\r\n    const nextReviewDate = new Date(Date.now() + interval * 86400000);\r\n\r\n    await updateDoc(ref, {\r\n      easiness,\r\n      repetitions,\r\n      interval,\r\n      lastReviewed: new Date(),\r\n      nextReviewDate,\r\n    });\r\n\r\n    setLastReviewedMessage(`âœ… \"${word.word}\" marked as reviewed!`);\r\n    setReviewWords((prev) => prev.filter((w) => w.word !== word.word));\r\n  };\r\n\r\n\r\n  if (loading || fetching) {\r\n    return (\r\n      <div className=\"flex justify-center items-center min-h-screen\">\r\n        Loading your review words...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen px-4 py-10 max-w-3xl mx-auto\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">ðŸ“š Word Review Mode</h1>\r\n      {reviewWords.length === 0 ? (\r\n        <p className=\"text-green-600 font-medium\">\r\n          ðŸŽ‰ You've completed all your reviews for today!\r\n        </p>\r\n      ) : (\r\n        <div className=\"grid gap-6\">\r\n          {lastReviewedMessage && (\r\n            <div className=\"mb-4 text-green-600 text-sm font-medium\">\r\n              {lastReviewedMessage}\r\n            </div>\r\n          )}\r\n          {reviewWords.map((word) => (\r\n            <div\r\n              key={word.id}\r\n              className=\"border rounded p-4 shadow bg-white dark:bg-gray-800\"\r\n            >\r\n              <h2 className=\"text-xl font-semibold mb-1\">{word.word}</h2>\r\n              <p className=\"text-gray-800 dark:text-gray-100\">{word.meaning}</p>\r\n              <p className=\"italic text-sm mt-1 text-gray-600 dark:text-gray-300\">\r\n                \"{word.example}\"\r\n              </p>\r\n\r\n              <div className=\"mt-4 flex gap-2 flex-wrap\">\r\n                {[0, 1, 2, 3, 4, 5].map((score) => (\r\n                  <button\r\n                    key={score}\r\n                    onClick={() => handleReview(score, word)}\r\n                    className=\"px-3 py-1 rounded font-medium transition transform active:scale-90 \r\n                      bg-gray-200 text-black hover:bg-gray-300 \r\n                      dark:bg-gray-600 dark:text-white dark:hover:bg-gray-500\"\r\n                  >\r\n                    {score}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n\r\n              {lastReviewedWord === word.word && (\r\n                <p className=\"text-green-500 text-sm mt-2\">âœ… Marked as reviewed!</p>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}